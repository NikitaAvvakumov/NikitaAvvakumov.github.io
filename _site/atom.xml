<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Gemfile</title>
 <link href="http://nikitaavvakumov.github.io/gemfile/atom.xml" rel="self"/>
 <link href="http://nikitaavvakumov.github.io/gemfile/"/>
 <updated>2015-06-29T22:50:30+03:00</updated>
 <id>http://nikitaavvakumov.github.io/gemfile</id>
 <author>
   <name>Nikita Avvakumov</name>
   <email></email>
 </author>

 
 <entry>
   <title>Empowering Null Objects in a Rails application</title>
   <link href="http://nikitaavvakumov.github.io/gemfile/2015/06/27/null-object/"/>
   <updated>2015-06-27T00:00:00+03:00</updated>
   <id>http://nikitaavvakumov.github.io/gemfile/2015/06/27/null-object</id>
   <content type="html">&lt;p&gt;Null Object is a well-known software design pattern that allows one to take advantage of
duck-typing encouraged by Ruby. Plenty of articles offer good descriptions of
this pattern and provide basic usage examples, which has prompted me to attempt
integrating it into my Rails apps several times. Unfortunately, null objects
always seemed to fall short of being able to fully replace nil checks and other
conditionals. Luckily, Sandi Metz took a terriffic in-depth look at this pattern
in a &lt;a href=&quot;http://confreaks.tv/videos/railsconf2015-nothing-is-something&quot;&gt;recent talk&lt;/a&gt;.
Inspired by this presentation, I returned to the Null Object pattern and finally
implemented it in a way that unlocks its full potential while leaving the code
base clean and compartmentalized.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;implementing-a-rudimentary-null-object-in-a-rails-application&quot;&gt;Implementing a rudimentary Null Object in a Rails application&lt;/h2&gt;

&lt;p&gt;A common example of using null objects in a Rails app has to do with
&lt;code&gt;current_user&lt;/code&gt;. With &lt;code&gt;user.id&lt;/code&gt; stored in the session, a simple helper method might be
implemented as&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;current_user&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@current_user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:user_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As written, the method returns a &lt;code&gt;User&lt;/code&gt; object if a user is signed in or &lt;code&gt;nil&lt;/code&gt;
otherwise. This necessitates a nil check in the view:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erb&quot; data-lang=&quot;erb&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  Welcome, &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  Welcome, Guest&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A basic Null Object implementation can go a short way towards mitigating the
problem:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# app/models/guest.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Guest&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;Guest&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# helper&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;current_user&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@current_user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:user_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Guest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erb&quot; data-lang=&quot;erb&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%#&lt;/span&gt;&lt;span class=&quot;c&quot;&gt; view &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Welcome, &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This implementation is not only messy but also half-hearted, as it merely
shuffles the conditional out of the view and into the helper. One way to clean
it up might be to override the &lt;code&gt;find&lt;/code&gt; and/or &lt;code&gt;find_by&lt;/code&gt; methods of &lt;code&gt;User&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# app/models/user.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Guest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;Guest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# the helper returns to its original implementation&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;current_user&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@current_user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:user_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;While less than ideal, this implementation of the Null Object pattern is
functional, and this is where many article examples stop.&lt;/p&gt;

&lt;h2 id=&quot;going-beyond-the-basics&quot;&gt;Going beyond the basics&lt;/h2&gt;

&lt;p&gt;There are some questions that can help take this implementation of the Null
Object pattern further:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Should the &lt;code&gt;User&lt;/code&gt;
class, which already handles persistence of user records and possibly other
duties, be responsible for creating and returning new &lt;code&gt;Guest&lt;/code&gt; objects? (Class
naming is deliberate here: had the null object been named &lt;code&gt;NullUser&lt;/code&gt;, it would have been
more tempting to have &lt;code&gt;User&lt;/code&gt; return a “null version of self”. A &lt;code&gt;Guest&lt;/code&gt;, on the
other hand, is clearly a distinct entity from &lt;code&gt;User&lt;/code&gt;.) Or does this responsibility
belong to a view helper, whose job is just to provide some reusable convenience methods
for views? Neither option feels right.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What happens when one wishes to extend the view in this fairly common way:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erb&quot; data-lang=&quot;erb&quot;&gt;&lt;span class=&quot;x&quot;&gt;Welcome, &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Rails is smart enough to route a reference to a &lt;code&gt;User&lt;/code&gt; object to
&lt;code&gt;UsersController#show&lt;/code&gt;, but it won’t be able to do anything with an instance of
&lt;code&gt;Guest&lt;/code&gt;. Not yet, anyway.&lt;/p&gt;

&lt;h2 id=&quot;extracting-new-responsibility&quot;&gt;Extracting new responsibility&lt;/h2&gt;
&lt;p&gt;To address the first question, one can ask if determining whether a person is a
user or a guest is a job worthy of a brand new class. Sandi’s talk makes a
strong case for answering this in the affirmative. In her presentation, she
drives the point home by naming the new class &lt;code&gt;GuaranteedAnimal&lt;/code&gt; - whether the
sought &lt;code&gt;Animal&lt;/code&gt; object exists or not, the &lt;code&gt;GuaranteedAnimal&lt;/code&gt; class will return
something that will look and waddle and quack like an &lt;code&gt;Animal&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And so, the &lt;code&gt;User&lt;/code&gt; class can lose its custom &lt;code&gt;find&lt;/code&gt; and &lt;code&gt;find_by&lt;/code&gt; methods and resume its
(hopefully) single responsibility of persisting user data. Instead, a new class is
created to encapsulate the &lt;code&gt;User&lt;/code&gt;/&lt;code&gt;Guest&lt;/code&gt; dichotomy:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Guest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# helper&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;current_user&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@current_user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:user_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;(It makes sense to propagate the &lt;code&gt;user&lt;/code&gt; -&amp;gt; &lt;code&gt;person&lt;/code&gt; change to the
helper method and into the views, but I’m keeping it as &lt;code&gt;current_user&lt;/code&gt; for
clarity.)&lt;/p&gt;

&lt;p&gt;Just like &lt;code&gt;GuaranteedAnimal&lt;/code&gt;, &lt;code&gt;Person.find&lt;/code&gt; is now sure to return an object that
will respond to all messages sent to it by other components of the application.
This approach eliminates the need for type checks and neatly encapsulates the
responsibility for determining the type of person interacting with the app.&lt;/p&gt;

&lt;h2 id=&quot;empowering-the-null-object&quot;&gt;Empowering the null object&lt;/h2&gt;
&lt;p&gt;What about being able to do&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erb&quot; data-lang=&quot;erb&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Rails knows how to route to a &lt;code&gt;User&lt;/code&gt; because &lt;strong&gt;routes.rb&lt;/strong&gt; probably contains&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:users&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Soooooo… Why not&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:guests&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If the application is made with any care, there should never be a reason to
handle anything but &lt;code&gt;show&lt;/code&gt; for a guest, so &lt;code&gt;resources :guests&lt;/code&gt; is overkill,
but it drives the point home - treating this null object as a first-class
citizen in the app allows it to perform all the duties of a &lt;code&gt;User&lt;/code&gt; doppelganger.
&lt;code&gt;GuestsController&lt;/code&gt; may do nothing more than redirect to sign-up/sign-in
pages, but it serves the higher purpose of putting &lt;code&gt;Guest&lt;/code&gt; on fully equal footing with &lt;code&gt;User&lt;/code&gt;, which
allows the former to stand in for the latter in all usage scenarios.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Null objects exist to eliminate the need for nil checking (which is just a
variant of type checking), and to fully enable Ruby’s duck typing and
polymorphism. However, null objects can be easily crippled when they are
pigeonholed into the “support” category, and their half-baked implementations
can force their code to pollute other classes. Code awkwardness and SRP
violations can be cleaned up by diligently extracting new objects to encapsulate
discrete bits of functionality. Moreover, full potential of null objects can be unlocked
only when they are treated as first-class citizens within an application.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Selective stubbing of method calls in RSpec</title>
   <link href="http://nikitaavvakumov.github.io/gemfile/2015/06/11/selective-stubbing-of-method-calls-in-rspec/"/>
   <updated>2015-06-11T00:00:00+03:00</updated>
   <id>http://nikitaavvakumov.github.io/gemfile/2015/06/11/selective-stubbing-of-method-calls-in-rspec</id>
   <content type="html">&lt;p&gt;While building a simple API in Rails, I had the following method in my User model that needed to be tested:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;generate_auth_token!&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;auth_token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Devise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;friendly_token&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exists?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;auth_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auth_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The method uses Devise’s &lt;code&gt;friendly_token&lt;/code&gt; method to generate an authentication token for a new user record. After calling the method once, the loop checks whether a user record with the same auth token already exists. If the answer is positive, the method goes for a second try; otherwise it breaks out of the loop, mission accomplished.
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;To test this, then, it is necessary to simulate the situation where the first call to &lt;code&gt;friendly_token&lt;/code&gt; returns an auth token already taken by another record, while a subsequent call does not. Enter the block implementation of RSpec Mocks.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;#generate_auth_token!&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;generates a new token when one is taken&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt;       &lt;span class=&quot;n&quot;&gt;original_friendly_token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Devise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:friendly_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt;       &lt;span class=&quot;n&quot;&gt;call_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt;       &lt;span class=&quot;n&quot;&gt;allow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Devise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;receive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:friendly_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt;         &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt;           &lt;span class=&quot;s1&quot;&gt;&amp;#39;veryunique123&amp;#39;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt;         &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt;           &lt;span class=&quot;n&quot;&gt;original_friendly_token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt;         &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt;       &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt;       &lt;span class=&quot;n&quot;&gt;existing_user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FactoryGirl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;auth_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;veryunique123&amp;#39;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14&lt;/span&gt;       &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;generate_auth_token!&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15&lt;/span&gt;       &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;auth_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;not_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;veryunique123&amp;#39;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;On L3, the original implementation of the method being stubbed is assigned to a variable. Within the block, call count (1 or &amp;gt; 1) determines whether the method is stubbed to return a predetermined value or whether the response is delegated to the method’s original implementation. (To avoid even the slightest possibility of a randomly failing test, I could have stubbed the subsequent calls to return a distinct preset value instead of hoping that &lt;code&gt;Devise.friendly_token&lt;/code&gt; will never return &lt;code&gt;&quot;veryunique123&quot;&lt;/code&gt;.)&lt;/p&gt;

&lt;p&gt;Obviously, the block’s conditions can be customized to fit the test’s needs, and the entire block implementation can be used for other purposes as well, as you can find out &lt;a href=&quot;http://www.relishapp.com/rspec/rspec-mocks/v/3-2/docs/configuring-responses/block-implementation#delegate-to-partial-double&#39;s-original-implementation-within-the-block&quot;&gt;in the RSpec docs&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>€ £ $ ¥ ₽</title>
   <link href="http://nikitaavvakumov.github.io/gemfile/2015/06/11/euro-pound-dollar-yen-ruble/"/>
   <updated>2015-06-11T00:00:00+03:00</updated>
   <id>http://nikitaavvakumov.github.io/gemfile/2015/06/11/euro-pound-dollar-yen-ruble</id>
   <content type="html">&lt;p&gt;Thanks to Stack Overflow’s &lt;a href=&quot;http://stackoverflow.com/research/developer-survey-2015&quot;&gt;annual survey&lt;/a&gt;, we now have this gem (pun intended) of data:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/research/developer-survey-2015#work-complang&quot;&gt;&lt;img src=&quot;https://gemfile.files.wordpress.com/2015/06/screen-shot-2015-06-11-at-9-38-02-am.png&quot; alt=&quot;US compensation&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;http://stackoverflow.com/research/developer-survey-2015#work-complang&quot;&gt;&lt;img src=&quot;https://gemfile.files.wordpress.com/2015/06/screen-shot-2015-06-11-at-9-39-20-am.png&quot; alt=&quot;Eastern Europe compensation&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Is this as absurd as it appears? Let’s take a closer look.
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;Yes, the cost of living in Eastern Europe is lower than in the US. No, it is not 4 times lower. Taking my current country of residence - Estonia - as an example, and using the all-encompassing &lt;a href=&quot;http://www.statista.com/statistics/274326/big-mac-index-global-prices-for-a-big-mac/&quot;&gt;Big Mac Index&lt;/a&gt;, we get the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Big Mac cost, US: $4.79&lt;/li&gt;
  &lt;li&gt;Big Mac cost, Estonia: $3.36&lt;/li&gt;
  &lt;li&gt;Relative cost of living in Estonia vs. US: 70%. A far cry from the 27% implied by Ruby dev salaries.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What else should be taken into account? Taxes. Using the simplest situation of a single earner, the American IRS takes &lt;a href=&quot;http://en.wikipedia.org/wiki/Income_tax_in_the_United_States&quot;&gt;28% from the $88K-183K tax bracket&lt;/a&gt;. Estonia has a &lt;a href=&quot;http://www.emta.ee/index.php?id=3274&quot;&gt;flat tax rate of 20%&lt;/a&gt;. Assuming that the reported figures represent pre-tax income, things look slightly better for Estonian developers.&lt;/p&gt;

&lt;p&gt;Another thing to consider is social tax: The Estonian government skims a &lt;a href=&quot;http://www.emta.ee/index.php?id=3274&quot;&gt;whopping 33%&lt;/a&gt; off the top of an employee’s income. To be clear, the employee never sees or really has to think about this money - the employer sends it directly to the government, and this figure doesn’t play any part in salary negotiations etc. The employer simply knows that whatever salary s/he negotiates with the employee, the actual total costs of hiring the person will be 1/3 higher. My best understanding of the US system leads me to believe that employees there pay &lt;a href=&quot;http://en.wikipedia.org/wiki/Income_tax_in_the_United_States#Social_Insurance_taxes&quot;&gt;additional 6.2% + 1.45%&lt;/a&gt; in taxes to Social Security and Medicare, and matching taxes are paid by employers. Overall, then, an argument can be made that the invisible 33% social tax in Estonia buys the developer more of things like healthcare, education and other social services, for which a US developer would have to pay out of pocket. This may be partly true, but the situation becomes a lot less clear when one considers that US employers offer comprehensive health coverages, for employee and his/her family, as they frequently seem to do, at least at top-tier companies.&lt;/p&gt;

&lt;p&gt;The tax situation is obviously far too complex to be analyzed exhaustively here, and individual variations in living expenses, taxation levels, employee benefits etc. can change the overall picture dramatically. However, I think we can reasonably safely make the generalized conclusion that the disparity in salary levels between North America, Western Europe (also included in the SO survey) and Eastern Europe does indeed reflect a gulf in living standards of developers world-wide. An optimistic final figure based on the above numbers might be 50%, as in “The consumer buying power of Estonian developers is at best 50% of that enjoyed by their American colleagues.”&lt;/p&gt;

&lt;p&gt;Absurd?&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>git hooks, Ctags & Rails</title>
   <link href="http://nikitaavvakumov.github.io/gemfile/2015/04/18/git-hooks-ctags-and-rails/"/>
   <updated>2015-04-18T00:00:00+03:00</updated>
   <id>http://nikitaavvakumov.github.io/gemfile/2015/04/18/git-hooks-ctags-and-rails</id>
   <content type="html">&lt;p&gt;Small adjustment to Tim Pope’s outstanding &lt;a href=&quot;http://tbaggery.com/2011/08/08/effortless-ctags-with-git.html&quot;&gt;Effortless Ctags with Git&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;To get ctags to also index all bundled gems (including Rails), make the following change to the &lt;code&gt;ctags&lt;/code&gt; hook&lt;/p&gt;

&lt;p&gt;Replace&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git ls-files &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  ctags --tag-relative -L - -f&lt;span class=&quot;s2&quot;&gt;&amp;quot;$dir/$$.tags&amp;quot;&lt;/span&gt; --languages&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;-javascript,sql&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;with&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ctags --recurse --tag-relative -f&lt;span class=&quot;s2&quot;&gt;&amp;quot;$dir/$$.tags&amp;quot;&lt;/span&gt; --languages&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;-javascript,sql &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;bundle show --paths&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;git ls-files&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After triggering the hook, the &lt;code&gt;tags&lt;/code&gt; file takes a few seconds to generate in the background - have patience :)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>_</title>
   <link href="http://nikitaavvakumov.github.io/gemfile/2015/02/15/_/"/>
   <updated>2015-02-15T00:00:00+02:00</updated>
   <id>http://nikitaavvakumov.github.io/gemfile/2015/02/15/_</id>
   <content type="html">&lt;p&gt;That nondescript title is not a placeholder - this post is really about the
underscore. It arose out of one of those rewarding moments where you suddenly
feel that there must be a way to do something better, and a search quickly
reveals that, indeed, there is.&lt;/p&gt;

&lt;p&gt;Ever evaluate a complex - particularly multi-line - expression in irb or
Rails console and immediately after hitting the
Return key realize that you’ve neglected to assign the return value to a
variable? Suffer no more:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;001&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pair&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;002&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;pair&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pair&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;003&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;004&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;005&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;36&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;See that little line on lines 4 &amp;amp; 5?! Saved by the humble underscore.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Hash[ ]</title>
   <link href="http://nikitaavvakumov.github.io/gemfile/2015/01/23/hash-%5B%5D/"/>
   <updated>2015-01-23T00:00:00+02:00</updated>
   <id>http://nikitaavvakumov.github.io/gemfile/2015/01/23/hash-[]</id>
   <content type="html">&lt;p&gt;Calling the &lt;code&gt;[]&lt;/code&gt; method on Hash converts a one-dimensional array with an even number of elements into a hash, with odd/even elements alternating as keys/values. Very cool&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;001&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;key1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;value1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;key2&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;key1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;value1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;key2&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;002&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;k1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;v1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;k2&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;ArgumentError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;odd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arguments&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hash&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>On Cucumber and testing</title>
   <link href="http://nikitaavvakumov.github.io/gemfile/2014/09/15/on-cucumber-and-testing/"/>
   <updated>2014-09-15T00:00:00+03:00</updated>
   <id>http://nikitaavvakumov.github.io/gemfile/2014/09/15/on-cucumber-and-testing</id>
   <content type="html">&lt;p&gt;&lt;em&gt;This article was originally written as part of an ongoing discussion within the
team building the &lt;a href=&quot;https://github.com/AgileVentures/osra&quot;&gt;OSRA&lt;/a&gt; app.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;cucumber&quot;&gt;1. Cucumber.&lt;/h2&gt;

&lt;p&gt;Any time a component is added to an application, its anticipated benefits must
be weighed against the costs of its implementation. Cucumber is a costly
framework in terms of development time, developer effort, and cognitive strain
on both creators and readers of tests due to the following:&lt;/p&gt;

&lt;!--more--&gt;
&lt;ul&gt;
  &lt;li&gt;Gherkin is an awkward sort-of-but-not-quite English&lt;/li&gt;
  &lt;li&gt;Scenarios written in Gherkin need to be then translated into Ruby in a
separate file (both good and bad, see below)&lt;/li&gt;
  &lt;li&gt;Regex in step definitions are laborious to write and may require periodic
maintenance (good for learning regex, bad for productivity)&lt;/li&gt;
  &lt;li&gt;Maintenance &amp;amp; correct reuse of step definitions can be overwhelming in larger
test suites&lt;/li&gt;
  &lt;li&gt;Cucumber features run much slower than specs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thus, for its use to be justified, Cucumber has to give returns that are
somehow greater than the investment put into writing its tests. I am not
convinced of Cucumber’s utility as documentation, nor of its usefulness as a
shared language for developers. Developers speak Ruby, or are in the process of
learning to speak it, and so Ruby, rather than Gherkin, is our &lt;em&gt;lingua franca&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;When it comes to documentation, I tend to question the value of any such thing
that is external to the code base itself. Developers can read code in models
and controllers. They can also read specs, and therefore have no need for an
additional framework. From the perspective of the client or user, Cucumber
stories are hardly suitable as manuals. Imagine reading them in order to learn
how to use GitHub or Heroku. Moreover, for the kinds of apps we usually build,
a need for a manual or any other kind of external document would be strongly
indicative of design and architectural flaws. My conclusion, therefore, is that
we need to evaluate Cucumber’s merits strictly as a testing framework. Its
other contributions to a project are secondary or non-existent.&lt;/p&gt;

&lt;h2 id=&quot;testing-at-the-right-level-of-abstraction&quot;&gt;2. Testing at the right level of abstraction.&lt;/h2&gt;

&lt;p&gt;Feature tests are meant to test an application at the highest level of its
functionality. Here, there are no models, no requests, no Rails - just a user’s
interaction with the browser. When we feature-test e.g. creation of a new
user… Wait, that’s low-level language… When we feature-test new user sign
up, what is relevant? My answer is something along the lines of:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-gherkin&quot; data-lang=&quot;gherkin&quot;&gt;&lt;span class=&quot;k&quot;&gt;When &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;I sign up for Site Name Then I should see my new&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;user profile And I should receive a confirmation email&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;i.e. We are testing that sign-up works. Step definition take care of filling in
requisite fields and clicking on relevant buttons.  But all we want to know -
all we ask the scenario to test - is whether the sign-up functionality works.&lt;/p&gt;

&lt;p&gt;I find the following example from the
&lt;a href=&quot;https://github.com/thoughtbot/shoulda-matchers/blob/master/features/rails_integration.feature#L4&quot;&gt;shoulda-matchers&lt;/a&gt;
gem inspiring:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-gherkin&quot; data-lang=&quot;gherkin&quot;&gt;&lt;span class=&quot;k&quot;&gt;When &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;I generate a new Rails application&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This step’s definition has 16 lines of code, including a conditional, but the
step itself is clean and uncluttered with unnecessary detail. The only bit of
information relevant to this high-level test is that a new Rails app is
created, the “how” of it is not.&lt;/p&gt;

&lt;p&gt;Later, the scenario has these steps:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-gherkin&quot; data-lang=&quot;gherkin&quot;&gt;&lt;span class=&quot;k&quot;&gt;Then &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;the output should contain &amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;2 examples, 0 failures&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;And &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;the output should contain &amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;should require name to be set&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;And &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;the output should contain &amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;should respond with 200&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I would argue that this descends to too-low a level of abstraction. To stay
consistent with the initial paradigm, these specifics ought to be used as
definition for a single step&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-gherkin&quot; data-lang=&quot;gherkin&quot;&gt;&lt;span class=&quot;k&quot;&gt;Then &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;the specs should pass&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;How they pass, what examples they run, or what messages they return is not the
concern of the high-level feature. Interestingly, if Cucumber is used thus, it
immediately becomes less costly:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;scenarios are short, to the point, easier to follow and to correct;&lt;/li&gt;
  &lt;li&gt;only a few awkward-English steps need to be translated to Ruby;&lt;/li&gt;
  &lt;li&gt;all the browser interactions are written in our beloved Ruby (Capybara) right
from the start;&lt;/li&gt;
  &lt;li&gt;the need for regex and paths is drastically reduced if not outright
eliminated.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This happens because the Cucumber framework very intentionally promotes such
high levels of abstraction by “physically” separating test steps from their
implementation. (RSpec features can be made as abstract, but with extra effort - 
otherwise, all the &lt;code&gt;click_button&lt;/code&gt;s &amp;amp; &lt;code&gt;fill_in&lt;/code&gt;s need to be included right in
  the scenario.)&lt;/p&gt;

&lt;p&gt;Admittedly, my experience developing web apps and testing them is rather
limited at the moment. You’d be right to question my opinions. If it helps, the
very people who develop Cucumber happen to &lt;a href=&quot;https://github.com/cucumber/cucumber-rails/issues/174&quot;&gt;think
likewise&lt;/a&gt;. web_steps.rb
was &lt;a href=&quot;http://aslakhellesoy.com/post/11055981222/the-training-wheels-came-off&quot;&gt;removed from the
framework&lt;/a&gt;
precisely so that people would stop writing bloated, boring and brittle
scenarios that contain the low-level steps like &lt;code&gt;When I click on …&lt;/code&gt; or &lt;code&gt;Then I
should see ... within ...&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;my-happy-place&quot;&gt;My happy place&lt;/h2&gt;

&lt;p&gt;Let us keep Cucumber. It’s a good tool. It can be useful to us and to the
client. And if it doesn’t come in terribly handy in building OSRA, getting
experience with it will still be good for us. But let us use Cucumber well and
in the way it was built to be used by keeping our tests at the highest level of
abstraction. The low-level details have two possible places to go: step
definitions or view specs. Both of these can co-exist without redundancy:
thoughtbot uses features for high-level tests, and view specs to test
conditional display of elements in view templates, and has good reasons for
doing so.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Using Date - Ruby vs. Rails</title>
   <link href="http://nikitaavvakumov.github.io/gemfile/2014/08/20/date-in-ruby-vs-rails/"/>
   <updated>2014-08-20T00:00:00+03:00</updated>
   <id>http://nikitaavvakumov.github.io/gemfile/2014/08/20/date-in-ruby-vs-rails</id>
   <content type="html">&lt;p&gt;This little investigation was prompted by an interesting quirk whereby &lt;code&gt;Date.today == Date.tomorrow&lt;/code&gt; returned &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Date.today&lt;/code&gt; is implemented in Ruby and uses system’s local time &amp;amp; timezone.&lt;/p&gt;

&lt;p&gt;In Rails, timezone can be set in &lt;strong&gt;config/application.rb&lt;/strong&gt; but defaults to UTC. Thus, it can be different that local system time used by Ruby.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Date.tomorrow&lt;/code&gt; &amp;amp; &lt;code&gt;Date.yesterday&lt;/code&gt; are implemented in Rails and use &lt;code&gt;Date.current&lt;/code&gt; internally.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Date.current&lt;/code&gt; is implemented in Rails thus:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zone&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;i.e. if &lt;code&gt;Time.zone&lt;/code&gt; is set (which in Rails it is, as stated above), &lt;code&gt;Date.current&lt;/code&gt;, &lt;code&gt;Date.tomorrow&lt;/code&gt; &amp;amp; &lt;code&gt;Date.yesterday&lt;/code&gt; will use &lt;code&gt;Time.zone.today&lt;/code&gt;. If it’s not set, which never happens in Rails, then the methods fall back to the timezone-unaware Ruby implementation.&lt;/p&gt;

&lt;p&gt;The solution to avoiding issues related to all this in Rails is to use the Rails implementations based on &lt;code&gt;Date.current&lt;/code&gt; and avoid using Ruby’s &lt;code&gt;Date.today&lt;/code&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>block_given?</title>
   <link href="http://nikitaavvakumov.github.io/gemfile/2014/08/18/block-given/"/>
   <updated>2014-08-18T00:00:00+03:00</updated>
   <id>http://nikitaavvakumov.github.io/gemfile/2014/08/18/block-given</id>
   <content type="html">&lt;p&gt;A method of the Kernel module, and thus available everywhere in Ruby, &lt;code&gt;block_given?&lt;/code&gt; allows you to check whether a block was passed as an argument to a function.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;new_func&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;block_given?&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&amp;#39;No block!&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;new_func&lt;/span&gt;    
&lt;span class=&quot;c1&quot;&gt;# =&amp;gt; &amp;quot;No block!&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;new_func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;In the block!&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# =&amp;gt; &amp;quot;In the block!&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here’s a less contrived example, which came out of my solution to a problem on &lt;a href=&quot;http://rubymonk.com/learning/books/1-ruby-primer/problems/156-sum&quot;&gt;RubyMonk&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyArray&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;attr_reader&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:array&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initial_value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# your code here&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initial_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;block_given?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;my_array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MyArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# =&amp;gt; 16 (10 + 1 + 2 + 3)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# =&amp;gt; 14 (1**2 + 2**2 + 3**2)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Without a block argument, the method simply adds array elements to a specified initial value. When a block is passed, each array element is first yielded to the block (which squares the element in the example) and &lt;em&gt;then&lt;/em&gt; summed.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>RSpec 3.0.1 and RubyMine</title>
   <link href="http://nikitaavvakumov.github.io/gemfile/2014/06/18/rspec-3-0-1-rubymine/"/>
   <updated>2014-06-18T08:15:28+03:00</updated>
   <id>http://nikitaavvakumov.github.io/gemfile/2014/06/18/rspec-3-0-1-rubymine</id>
   <content type="html">&lt;p&gt;After the recent RSpec update, warnings started showing up in RubyMine:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Deprecation Warnings: Treating &lt;code&gt;metadata[:execution_result]&lt;/code&gt; as a hash is deprecated. Use the attributes methods to access the data instead. Called from …/teamcity/rspec3_formatter.rb: line#&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;(So, RSpec is complaining that RubyMine’s formatter is not accessing its data properly?) The warnings were overwhelming to the point of obscuring the results of running the test. Simple fix:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;open &lt;strong&gt;/Applications/RubyMine.app/rb/testing/patch/bdd/teamcity/spec/runner/formatter/teamcity/rspec3_formatter.rb&lt;/strong&gt; by clicking on one of the links in the warning message&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;this takes you right to the offending lines (#135, 333 &amp;amp; 340 in my version), wherein, as per the message’s instructions, the hash format&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;started_at_ms&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_time_in_ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;example&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execution_result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:started_at&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;needs to be changed to an attribute accessor&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;started_at_ms&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_time_in_ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;example&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execution_result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;started_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;No more warnings :)&lt;/p&gt;

&lt;p&gt;(In the process, I also learned that while &lt;strong&gt;File &amp;gt; Open Recent&lt;/strong&gt; works to reopen &lt;em&gt;projects&lt;/em&gt;, &lt;strong&gt;View &amp;gt; Recent Files&lt;/strong&gt; (or &lt;code&gt;⌘-E&lt;/code&gt;) is for recently closed &lt;em&gt;files&lt;/em&gt;.)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>The Rails Machine</title>
   <link href="http://nikitaavvakumov.github.io/gemfile/2014/06/13/the-rails-machine/"/>
   <updated>2014-06-13T00:00:00+03:00</updated>
   <id>http://nikitaavvakumov.github.io/gemfile/2014/06/13/the-rails-machine</id>
   <content type="html">&lt;p&gt;I’ve been working through - and enjoying - the &lt;a href=&quot;https://courses.edx.org/courses/BerkeleyX/CS_CS169.2x/1T2014/info&quot;&gt;EdX/Berkeley CS169 course&lt;/a&gt; for the past couple of months. With a bit of a break between the two halves, I thought I’d start a small Rails project of my own. After including &lt;code&gt;rspec-rails&lt;/code&gt; in the Gemfile, I ran bundle install and then&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rails g rspec:install
Could not find generator rspec:install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This was bad. I naturally blamed the gem first, and spent an awful lot of time digging for an answer. At one point, as a control, I added the &lt;code&gt;cucumber-rails&lt;/code&gt; gem&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rails g cucumber:install
Could not find generator cucumber:install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This was much worse. The gems were installed and bundled, no errors, no missing dependencies. I went as far as installing the latest Ruby, creating a new gemset, reinstalling Rails, …&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Could not find generator cucumber:install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Running &lt;code&gt;rails g&lt;/code&gt; only showed the built-in Rails generators: model, controller, etc. None of the gem generators would show up. This meant no devise, no foundation, no bootstrap, no hundreds of other gems that I haven’t used or that have not even been written yet. I dug deeper, hitting pages 3 and 4 of my Google searches, looking at questions and answers from 2, 3, 4 years ago. Nothing.&lt;/p&gt;

&lt;p&gt;It was late. I turned off the computer, which I rarely do, and went to bed.
In the morning, everything worked.&lt;/p&gt;

&lt;p&gt;I couldn’t help but remember &lt;em&gt;Tom Knight and the Lisp Machine&lt;/em&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A novice was trying to fix a broken Lisp machine by turning the power off and on.&lt;/p&gt;

  &lt;p&gt;Knight, seeing what the student was doing, spoke sternly: “You cannot fix a machine by just power-cycling it with no understanding of what is going wrong.”&lt;/p&gt;

  &lt;p&gt;Knight turned the machine off and on.&lt;/p&gt;

  &lt;p&gt;The machine worked.&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>Removing Paperclip attachments</title>
   <link href="http://nikitaavvakumov.github.io/gemfile/2014/04/27/removing-paperclip-attachments/"/>
   <updated>2014-04-27T13:54:08+03:00</updated>
   <id>http://nikitaavvakumov.github.io/gemfile/2014/04/27/removing-paperclip-attachments</id>
   <content type="html">&lt;p&gt;Paperclip’s &lt;a href=&quot;https://github.com/thoughtbot/paperclip#deleting-an-attachment&quot;&gt;GitHub page&lt;/a&gt; includes the necessary steps to delete an attachment - the model’s attribute that refers to the attachment simply gets set to nil. Here is the full implementation of deleting a user’s profile picture in a Rails app. Start with tests (right?!):&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;spec/features/editing_users_spec.rb:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;spec_helper&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;feature&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Editing Users&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FactoryGirl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:admin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FactoryGirl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:admin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;scenario&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;removing user profile photo&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sign_in_as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;admin&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# of course&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;visit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;edit_user_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;click_link&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Remove profile photo&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;have_content&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;User profile photo has been removed.&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;not_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;have_css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;img[src*=&amp;#39;user.png&amp;#39;]&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# file name of the user photo defined in the factory&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;have_css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;img[src*=&amp;#39;paperclip_default.png&amp;#39;]&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# specified in the User model&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;(&lt;a href=&quot;/2014/04/27/paperclip-attachments-in-factories/&quot;&gt;This post&lt;/a&gt; covers creation of an attachment in a FactoryGirl factory.)&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Red. The test first fails when it tries to find a “Remove profile photo” link. In my implementation, photo removal takes place in the Edit view, so that’s where the link goes (or, to be more precise, into the ‘form’ partial):&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;app/views/users/_form.html.erb:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erb&quot; data-lang=&quot;erb&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form_for&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:photo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Profile photo&amp;#39;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_field&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:photo&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;persisted?&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link_to&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Remove profile photo&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remove_user_photo_path&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;(If the user has not been persisted to the database yet, as is the case when the partial is used by the New view to create a new user, the &lt;code&gt;link_to&lt;/code&gt; cannot be generated as there is no user id yet - see &lt;strong&gt;routes.rb&lt;/strong&gt; below. This is why it is wrapped in the &lt;code&gt;if..persisted?&lt;/code&gt; clause.)&lt;/p&gt;

&lt;p&gt;Red. In this iteration, the test fails because &lt;code&gt;remove_user_photo_path&lt;/code&gt; is undefined. That’s next:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;config/routes.rb:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;draw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;user/:id/remove_photo&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;users#remove_photo&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;remove_user_photo&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As can be seen from the route, the &lt;code&gt;link_to&lt;/code&gt; method used in the view will generate a url such as &lt;code&gt;/user/1/remove_photo&lt;/code&gt;, which is why having a user id (from a persisted user) is necessary.&lt;/p&gt;

&lt;p&gt;Red. The test now fails because the &lt;code&gt;remove_photo&lt;/code&gt; action does not exist in the Users controller. We are finally ready to make use of Paperclip’s instructions on deleting attachments:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;app/controllers/users_controller.rb:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UsersController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;remove_photo&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;photo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;redirect_to&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;flash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;User profile photo has been removed.&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The action pulls the relevant user record out of the database, sets its attachment-referring &lt;code&gt;photo&lt;/code&gt; attribute to &lt;code&gt;nil&lt;/code&gt;, and saves the user to the database. It then redirects the browser to the user’s profile page, where the profile image now displays Paperclip’s default graphic and not the photo defined in the factory.&lt;/p&gt;

&lt;p&gt;Green :)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Paperclip attachments in RSpec factories</title>
   <link href="http://nikitaavvakumov.github.io/gemfile/2014/04/27/paperclip-attachments-in-factories/"/>
   <updated>2014-04-27T12:11:46+03:00</updated>
   <id>http://nikitaavvakumov.github.io/gemfile/2014/04/27/paperclip-attachments-in-factories</id>
   <content type="html">&lt;p&gt;Assuming one has a model whose attachments are handled by Paperclip, i.e.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rails generate paperclip user photo&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;app/models/user.rb:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;has_attached_file&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:photo&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;then to generate a test model with FactoryGirl, including the attachment:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;spec/factories/user_factory.rb:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActionDispatch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;TestProcess&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;FactoryGirl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:user&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Sample User&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;photo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fixture_file_upload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;spec/fixtures/test_img.png&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;image/png&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Various manipulations of the attached image through the web interface can then be tested with RSpec and Capybara.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Testing images with RSpec</title>
   <link href="http://nikitaavvakumov.github.io/gemfile/2014/04/27/testing-images-with-rspec/"/>
   <updated>2014-04-27T11:58:38+03:00</updated>
   <id>http://nikitaavvakumov.github.io/gemfile/2014/04/27/testing-images-with-rspec</id>
   <content type="html">&lt;p&gt;To test whether the right image is displayed on a page:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;have_css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;img[src*=&amp;#39;image_name.png&amp;#39;]&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;i.e. “Expect page to have an &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag whose &lt;code&gt;src&lt;/code&gt; attribute contains the name of the required image.”&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Learn to delegate (your model methods)</title>
   <link href="http://nikitaavvakumov.github.io/gemfile/2014/04/17/delegate-your-model-methods/"/>
   <updated>2014-04-17T16:10:42+03:00</updated>
   <id>http://nikitaavvakumov.github.io/gemfile/2014/04/17/delegate-your-model-methods</id>
   <content type="html">&lt;p&gt;&lt;code&gt;delegate&lt;/code&gt; is neat trick that allows one to write cleaner, neater code. Particularly when dealing with ActiveRecord associations, &lt;code&gt;delegate&lt;/code&gt; makes it possible to “outsource” a method to an associated object.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# has attribute &amp;#39;author&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Chapter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;belongs_to&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:book&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;delegate&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:book&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Without &lt;code&gt;delegate&lt;/code&gt;, when dealing with a &lt;code&gt;Chapter&lt;/code&gt; object, you’d need to access the book’s author via &lt;code&gt;chapter.book.author&lt;/code&gt;. With delegation, this can be neatly shortened to &lt;code&gt;chapter.author&lt;/code&gt;, with the &lt;code&gt;.author&lt;/code&gt; getting handed off to the associated &lt;code&gt;Book&lt;/code&gt; object.&lt;/p&gt;

&lt;p&gt;An object can delegate multiple methods to its association, as shown in the example below. Another handy option is to use &lt;em&gt;prefixes&lt;/em&gt; with &lt;code&gt;delegate&lt;/code&gt;. For instance, using the same approach as above to refer to the book’s title would create &lt;code&gt;chapter.title&lt;/code&gt;, which is confusing. With prefixes, however:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Chapter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;belongs_to&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:book&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;delegate&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;chapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;book_title&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;# returns book&amp;#39;s title&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;chapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;book_author&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# returns book&amp;#39;s author&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;(Of course, if chapters had their own titles, the above code would make them inaccessible, but that’s what you get with contrived examples. See &lt;a href=&quot;http://pivotallabs.com/rails-delegates-are-even-more-useful-than-i-knew/&quot;&gt;this post&lt;/a&gt; on the Pivotal Labs’ blog for a solution.)&lt;/p&gt;

&lt;p&gt;One final tidbit to touch upon is that &lt;code&gt;delegate&lt;/code&gt; is not limited to deliberately created methods and attributes but extends equally well to those created behind the scenes by the association:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Quote&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;belongs_to&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:chapter&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;delegate&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:chapter&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;quote&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# returns the book object associated with the chapter to which the quote belongs&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For more on &lt;code&gt;delegate&lt;/code&gt;, including custom prefixes and how to handle NoMethodErrors, see the &lt;a href=&quot;http://apidock.com/rails/Module/delegate&quot;&gt;API Docs&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Is it changed?</title>
   <link href="http://nikitaavvakumov.github.io/gemfile/2014/04/10/is-it-changed/"/>
   <updated>2014-04-10T09:35:58+03:00</updated>
   <id>http://nikitaavvakumov.github.io/gemfile/2014/04/10/is-it-changed</id>
   <content type="html">&lt;p&gt;Rails has some useful methods to check whether an object has changed since first being loaded into memory. Here are some examples:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;2.1.0 :001 &amp;gt; &lt;span class=&quot;nv&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; User.find&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;c&quot;&gt;#&amp;lt;User id: 1, name: &amp;quot;Roderick&amp;quot;, email: &amp;quot;rod@example.com&amp;quot;, created_at: ..., updated_at: ...&amp;gt;&lt;/span&gt;
2.1.0 :002 &amp;gt; user.name &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Jimmy&amp;#39;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Jimmy&amp;quot;&lt;/span&gt;
2.1.0 :003 &amp;gt; user.changed?
 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
2.1.0 :004 &amp;gt; user.changed
 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
2.1.0 :005 &amp;gt; user.changes
 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Roderick&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;Jimmy&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]}&lt;/span&gt;
2.1.0 :006 &amp;gt; user.name_changed?
 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
2.1.0 :007 &amp;gt; user.email_changed?
 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
2.1.0 :008 &amp;gt; user.name_was
 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Roderick&amp;quot;&lt;/span&gt;
2.1.0 :009 &amp;gt; user.save
 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
2.1.0 :010 &amp;gt; user.changed?
 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;More info here: &lt;a href=&quot;http://api.rubyonrails.org/classes/ActiveModel/Dirty.html&quot;&gt;ActiveModel::Dirty&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>do..end vs {}: Not just a matter of style!</title>
   <link href="http://nikitaavvakumov.github.io/gemfile/2014/04/04/block-delimiters-not-just-a-matter-of-style/"/>
   <updated>2014-04-04T11:54:40+03:00</updated>
   <id>http://nikitaavvakumov.github.io/gemfile/2014/04/04/block-delimiters-not-just-a-matter-of-style</id>
   <content type="html">&lt;p&gt;“Use curly braces for single-line blocks and &lt;code&gt;do..end&lt;/code&gt; for multi-lines blocks.” After seeing various permutations of that statement dozens of times, one can come to believe that the difference between the two is purely stylistic and that there is no practical reason to opt for one vs. the other. Most of the time, that is, indeed, true. Until that one-time-in-a-thousand when it’s not.&lt;/p&gt;

&lt;p&gt;The trouble with &lt;code&gt;do..end&lt;/code&gt; vs. &lt;code&gt;{}&lt;/code&gt; can show up thanks to (a) Ruby’s laid-back attitude towards syntax, and (b) the fact that the two kinds of block delimiters do not behave 100% identically.&lt;/p&gt;

&lt;p&gt;The syntax slackness in question is the optional usage of parentheses around method parameters. For instance, the following line pairs of code are identical:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erb&quot; data-lang=&quot;erb&quot;&gt;&lt;span class=&quot;x&quot;&gt;FactoryGirl.create(:user) # is the same as&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;FactoryGirl.create :user&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Sign in&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;signin_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; # is the same as&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link_to&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Sign in&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;signin_path&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The parentheses can be safely omitted from method calls in the vast majority of cases. That is, unless a block is involved, which brings us to (b).
The not-so-subtle difference between &lt;code&gt;do..end&lt;/code&gt; and &lt;code&gt;{}&lt;/code&gt; is their order of precedence - the curly braces rank higher on that score than &lt;code&gt;do..end&lt;/code&gt;. This means that in a parentheses-less method call, the curly braces will bind the block to the preceding parameter, while &lt;code&gt;do..end&lt;/code&gt; will bind it to the method.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rails console
2.1.0 :001 &amp;gt; puts &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1, 2, 3&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;.map &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; x * &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
2
4
6
2.1.0 :002 &amp;gt; puts &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1, 2, 3&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;.map &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; x * 2&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; end
&lt;span class=&quot;c&quot;&gt;#&amp;lt;Enumerator:hex_code&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The first command was equivalent to&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;puts&lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;1, 2, 3&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;.map &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; x * &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;while the second was interpreted as&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;puts&lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;1, 2, 3&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;.map&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; x * &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In the first case, the block was passed to &lt;code&gt;.map&lt;/code&gt;, which evaluated it and then gave the result back to &lt;code&gt;puts&lt;/code&gt;. In the second case, the block was passed to &lt;code&gt;puts&lt;/code&gt;, which ignored it and only reported that calling &lt;code&gt;.map&lt;/code&gt; on an array yields an &lt;code&gt;Enumerator&lt;/code&gt; object.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>.try</title>
   <link href="http://nikitaavvakumov.github.io/gemfile/2014/03/26/try/"/>
   <updated>2014-03-26T07:44:43+02:00</updated>
   <id>http://nikitaavvakumov.github.io/gemfile/2014/03/26/try</id>
   <content type="html">&lt;p&gt;This Ruby method returns nil rather than raising an exception when called on a non-existent object.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rails console
2.1.0 :001 &amp;gt; nil.admin?
NoMethodError: undefined method &lt;span class=&quot;s1&quot;&gt;&amp;#39;admin?&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; nil:NilClass
... stack trace ...
2.1.0 :002 &amp;gt; nil.try&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;:admin&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; nil&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here’s a practical example: Is the currently signed in user an admin? If so, he should see site admin links, otherwise they should be hidden:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;any_view_file.html.erb:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erb&quot; data-lang=&quot;erb&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;admin?&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  Show links&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The above code breaks when the page is viewed by a non-signed-in visitor and &lt;code&gt;current_user&lt;/code&gt; is not set (i.e. is nil).&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;if&lt;/code&gt; statement can be augmented to include two tests:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erb&quot; data-lang=&quot;erb&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;admin?&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  Show links&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Or the &lt;code&gt;try&lt;/code&gt; method can be used to clean up the code:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erb&quot; data-lang=&quot;erb&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:admin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  Show links&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;if&lt;/code&gt; statement will return &lt;code&gt;true&lt;/code&gt; if the currently signed in user is an admin, &lt;code&gt;false&lt;/code&gt; if he is not, and &lt;code&gt;nil&lt;/code&gt; if there is no signed in user. Since &lt;code&gt;nil&lt;/code&gt; is falsey, the admin links remain nicely hidden.&lt;/p&gt;

&lt;p&gt;(This approach merely cleans up the layout for unauthorized users. It should not be relied on to actually prevent unauthorized access to controller actions.)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Nuking all changes with Git</title>
   <link href="http://nikitaavvakumov.github.io/gemfile/2014/03/13/nuking-all-changes-with-git/"/>
   <updated>2014-03-13T15:19:44+02:00</updated>
   <id>http://nikitaavvakumov.github.io/gemfile/2014/03/13/nuking-all-changes-with-git</id>
   <content type="html">&lt;p&gt;After looking it up twice in one (less than productive) day…&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git reset --hard &lt;span class=&quot;c&quot;&gt;# delete all changes from tracked files&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clean -f -d &lt;span class=&quot;c&quot;&gt;# remove untracked files and directories&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;(Warning: This is destructive! Code will be irreversibly lost.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;An alternative to doing the above would be:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git add .
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git reset --hard&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And if things aren’t a complete disaster that deserves to be annihilated - for example, perhaps they can serve as a stern reminder in the future - they can be saved prior to destruction with&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git diff &amp;gt; ~/lessons_learned/rails_mess_1.diff&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Enjoy your day-of-the-week :)</title>
   <link href="http://nikitaavvakumov.github.io/gemfile/2014/03/13/enjoy-your-day-of-the-week/"/>
   <updated>2014-03-13T10:27:21+02:00</updated>
   <id>http://nikitaavvakumov.github.io/gemfile/2014/03/13/enjoy-your-day-of-the-week</id>
   <content type="html">&lt;p&gt;Simple:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rails console
2.1.0 :001 &amp;gt; Time.now.wday
  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;#Thursday&lt;/span&gt;
2.1.0 :002 &amp;gt; Date::DAYNAMES
  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Sunday&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;Monday&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;Tuesday&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;Wednesday&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;Thursday&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;Friday&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;Saturday&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
2.1.0 :003 &amp;gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Enjoy your #{Date::DAYNAMES[Time.now.wday]}.&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Enjoy your Thursday.&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</content>
 </entry>
 

</feed>
